#!/usr/bin/env coffee

fs = require('fs')
path = require('path')
Perceptron = require('../lib/perceptron')
Viterbi = require('../lib/viterbi')
SparseVector = require('../lib/vector')
Featurizer = require('../lib/featurizer')
Labelizer = require('../lib/labelizer')

console.warn("#{new Date()}\tLoading constant databases (ngrams, morphological data, etc.).")
allLabels = JSON.parse(fs.readFileSync(path.join(__dirname, '../resources/labels.json')))
nounLabels = ('proper-' + label for label in allLabels when /^noun/.test(label))
morpheusUnaccentuated = JSON.parse(fs.readFileSync(path.join(__dirname, '../build/morpheus.unaccentuated.json')))
morpheusAccentuated = JSON.parse(fs.readFileSync(path.join(__dirname, '../build/morpheus.accentuated.json')))
console.warn("#{new Date()}\tDone loading databases.")

featurizer = new Featurizer(morpheusAccentuated)
labelizer = new Labelizer(morpheusUnaccentuated, nounLabels)
perceptron = new Perceptron(featurizer, labelizer, (scorer) -> new Viterbi(scorer, MAX_TABLE_WIDTH))

MAX_TABLE_WIDTH = 193

raw = ""
process.stdin.on('data', (chunk) ->
  raw += chunk
)

process.stdin.on('end', ->
  [trainings, seed] = JSON.parse(raw)
  message = JSON.stringify(perceptron.apply(trainings, 1, new SparseVector(seed)).hash)
  process.stdout.write(message)
)

process.stdin.resume()